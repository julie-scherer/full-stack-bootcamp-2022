Source: https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-iv-database

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(venv) julieannscherer@MacBook-Pro-2021 phonebook % flask db init
  Creating directory /Users/julieannscherer/coding_temple/flask/phonebook/migrations ...  done
  Creating directory /Users/julieannscherer/coding_temple/flask/phonebook/migrations/versions ...  done
  Generating /Users/julieannscherer/coding_temple/flask/phonebook/migrations/script.py.mako ...  done
  Generating /Users/julieannscherer/coding_temple/flask/phonebook/migrations/env.py ...  done
  Generating /Users/julieannscherer/coding_temple/flask/phonebook/migrations/README ...  done
  Generating /Users/julieannscherer/coding_temple/flask/phonebook/migrations/alembic.ini ...  done
  Please edit configuration/connection/logging settings in '/Users/julieannscherer/coding_temple/flask/phonebook/migrations/alembic.ini'
  before proceeding.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(venv) julieannscherer@MacBook-Pro-2021 phonebook % flask db migrate -m "addressbook table"
INFO  [alembic.runtime.migration] Context impl SQLiteImpl.
INFO  [alembic.runtime.migration] Will assume non-transactional DDL.
INFO  [alembic.autogenerate.compare] Detected added table 'address'
  Generating /Users/julieannscherer/coding_temple/flask/phonebook/migrations/versions/c614583e6def_addressbook_table.py ...  done
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(venv) julieannscherer@MacBook-Pro-2021 phonebook % flask db upgrade
INFO  [alembic.runtime.migration] Context impl SQLiteImpl.
INFO  [alembic.runtime.migration] Will assume non-transactional DDL.
INFO  [alembic.runtime.migration] Running upgrade  -> c614583e6def, addressbook table
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(venv) julieannscherer@MacBook-Pro-2021 phonebook % python3
>>> 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>>> from app import db
>>> from app.models import AddressBook
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>>> db
<SQLAlchemy engine=sqlite:////Users/julieannscherer/coding_temple/flask/phonebook/app.db>
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>>> help(db)
Help on SQLAlchemy in module flask_sqlalchemy object:

class SQLAlchemy(builtins.object)
 |  SQLAlchemy(app=None, use_native_unicode=True, session_options=None, metadata=None, query_class=<class 'flask_sqlalchemy.BaseQuery'>, model_class=<class 'flask_sqlalchemy.model.Model'>, engine_options=None)
 |  
 |  This class is used to control the SQLAlchemy integration to one
 |  or more Flask applications.  Depending on how you initialize the
 |  object it is usable right away or will attach as needed to a
 |  Flask application.
 |  
 |  There are two usage modes which work very similarly.  One is binding
 |  the instance to a very specific Flask application::
 |  
 |      app = Flask(__name__)
 |      db = SQLAlchemy(app)
 |  
 |  The second possibility is to create the object once and configure the
 |  application later to support it::
 |  
 |      db = SQLAlchemy()
 |  
 |      def create_app():
 |          app = Flask(__name__)
 |          db.init_app(app)
 |          return app
 |  
 |  The difference between the two is that in the first case methods like
 |  :meth:`create_all` and :meth:`drop_all` will work all the time but in
 |  the second case a :meth:`flask.Flask.app_context` has to exist.
 |  
 |  By default Flask-SQLAlchemy will apply some backend-specific settings
 |  to improve your experience with them.
 |  
 |  As of SQLAlchemy 0.6 SQLAlchemy
 |  will probe the library for native unicode support.  If it detects
 |  unicode it will let the library handle that, otherwise do that itself.
 |  Sometimes this detection can fail in which case you might want to set
 |  ``use_native_unicode`` (or the ``SQLALCHEMY_NATIVE_UNICODE`` configuration
 |  key) to ``False``.  Note that the configuration key overrides the
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

